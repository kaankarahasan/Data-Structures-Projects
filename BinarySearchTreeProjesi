Verilen diziyi kullanarak bir Binary Search Tree (BST) oluşturmak için, her elemanı sırasıyla ekleyelim. Her adımda, elemanı eklerken BST'nin kurallarına uyacağız: sol çocuk ebeveynden küçük olacak, sağ çocuk ise ebeveynden büyük olacak.

### Adım 1: İlk eleman root olur
Root \(7\)'dir.

\[ 7 \]

### Adım 2: İkinci eleman root'un soluna veya sağına eklenir
\(5\) root \(7\)'den küçük olduğu için soluna eklenir.

```
   7
  /
 5
```

### Adım 3: Üçüncü eleman root'un soluna veya sağına eklenir
\(1\) root \(7\)'den küçük ve \(5\)'den de küçük olduğu için \(5\)'in soluna eklenir.

```
   7
  /
 5
/
1
```

### Adım 4: Dördüncü eleman root'un sağına eklenir
\(8\) root \(7\)'den büyük olduğu için sağına eklenir.

```
   7
  / \
 5   8
/
1
```

### Adım 5: Beşinci eleman uygun yere eklenir
\(3\) root \(7\)'den küçük, \(5\)'ten küçük ama \(1\)'den büyük olduğu için \(1\)'in sağına eklenir.

```
   7
  / \
 5   8
/
1
 \
  3
```

### Adım 6: Altıncı eleman uygun yere eklenir
\(6\) root \(7\)'den küçük ve \(5\)'ten büyük olduğu için \(5\)'in sağına eklenir.

```
   7
  / \
 5   8
/ \
1   6
 \
  3
```

### Adım 7: Yedinci eleman uygun yere eklenir
\(0\) root \(7\)'den küçük, \(5\)'ten küçük ve \(1\)'den de küçük olduğu için \(1\)'in soluna eklenir.

```
   7
  / \
 5   8
/ \
1   6
/ \
0  3
```

### Adım 8: Sekizinci eleman root'un sağına eklenir
\(9\) root \(7\)'den büyük olduğu için \(8\)'in sağına eklenir.

```
   7
  / \
 5   8
/ \   \
1   6   9
/ \
0  3
```

### Adım 9: Dokuzuncu eleman uygun yere eklenir
\(4\) root \(7\)'den küçük, \(5\)'ten küçük, \(1\)'den büyük ve \(3\)'ten büyük olduğu için \(3\)'ün sağına eklenir.

```
   7
  / \
 5   8
/ \   \
1   6   9
/ \
0  3
    \
     4
```

### Adım 10: Onuncu eleman uygun yere eklenir
\(2\) root \(7\)'den küçük, \(5\)'ten küçük, \(1\)'den büyük ve \(3\)'ten küçük olduğu için \(3\)'ün soluna eklenir.

```
   7
  / \
 5   8
/ \   \
1   6   9
/ \
0  3
  / \
 2   4
```

### Sonuç
Sonuç olarak, verilen diziyi kullanarak oluşturulan Binary Search Tree (BST) şu şekildedir:

```
      7
     / \
    5   8
   / \   \
  1   6   9
 / \
0  3
   / \
  2   4
```

### Açıklamalar
- Root \(7\)'dir.
- Root'un solunda \(5\), sağında \(8\) bulunur.
- \(5\)'in solunda \(1\), sağında \(6\) bulunur.
- \(1\)'in solunda \(0\), sağında \(3\) bulunur.
- \(3\)'ün solunda \(2\), sağında \(4\) bulunur.
- \(8\)'in sağında \(9\) bulunur.